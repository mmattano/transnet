name: Update Model Organism Networks

on:
  schedule:
    # Run every other month on the 1st at midnight
    - cron: '0 0 1 1,3,5,7,9,11 *'
  workflow_dispatch:
    inputs:
      organisms:
        description: 'Comma-separated list of organisms to build (human,mouse,yeast,ecoli)'
        required: false
        default: 'human,mouse,yeast,ecoli'
      debug:
        description: 'Run in debug mode with smaller networks'
        required: false
        default: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Install the package in development mode
          pip install -e .
          # Install additional dependencies
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          # Install optional dependencies that might be needed
          pip install python-louvain bioservices mygene zeep requests
      
      - name: Debug environment
        run: |
          echo "Current directory: $(pwd)"
          echo "Python path: $PYTHONPATH"
          echo "Python version: $(python --version)"
          echo "Installed packages:"
          pip list
          echo "Directory structure:"
          find . -type d -not -path "*/\.*" | sort
          
      - name: Parse organisms input
        id: parse-input
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            ORGANISMS="${{ github.event.inputs.organisms }}"
            DEBUG="${{ github.event.inputs.debug }}"
          else
            ORGANISMS="human,mouse,yeast,ecoli"
            DEBUG="false"
          fi
          ORGANISMS_ARRAY=$(echo $ORGANISMS | tr ',' ' ')
          echo "ORGANISMS_ARRAY=$ORGANISMS_ARRAY" >> $GITHUB_ENV
          echo "DEBUG=$DEBUG" >> $GITHUB_ENV
          
      - name: Build networks
        run: |
          # Set PYTHONPATH to include the current directory
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          
          DEBUG_FLAG=""
          if [ "$DEBUG" == "true" ]; then
            DEBUG_FLAG="--debug"
          fi
          
          echo "Running: python maintenance/build_networks.py --output-dir data --organisms $ORGANISMS_ARRAY $DEBUG_FLAG"
          python maintenance/build_networks.py --output-dir data --organisms $ORGANISMS_ARRAY $DEBUG_FLAG
        env:
          PYTHONUNBUFFERED: 1
          
      - name: Generate build report
        run: |
          echo "# Network Build Report" > build_report.md
          echo "Generated: $(date)" >> build_report.md
          echo "" >> build_report.md
          
          for ORG in $ORGANISMS_ARRAY; do
            echo "## $ORG" >> build_report.md
            if [ -d "data/$ORG/latest" ]; then
              echo "✅ Build successful" >> build_report.md
              echo "" >> build_report.md
              echo "### Network Summary" >> build_report.md
              echo "\`\`\`" >> build_report.md
              if [ -f "data/$ORG/latest/summary.txt" ]; then
                cat data/$ORG/latest/summary.txt >> build_report.md
              else
                echo "Summary file not found" >> build_report.md
              fi
              echo "\`\`\`" >> build_report.md
            else
              echo "❌ Build failed" >> build_report.md
            fi
            echo "" >> build_report.md
          done
          
      - name: Commit and push updated networks
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git add data/ || echo "No data directory to add"
          git add build_report.md || echo "No report to add"
          timestamp=$(date +"%Y-%m-%d")
          git commit -m "Update model organism networks - $timestamp" || echo "No changes to commit"
          git push
          